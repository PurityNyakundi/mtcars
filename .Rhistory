mtcars
library(dpylr)
str(mtcars)
glimpse(mtcars)
mtcars
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ranger)
str(mtcars)
glimpse(mtcars)
mtcars$vs<-as.factor(mtcars$vs)
glimpse(mtcars)
mtcars$vs<-as.factor(mtcars$vs)
mtcars$carb<-as.factor(mtcars$carb)
str(mtcars)
mtcars$am<-as.factor(mtcars$am)
mtcars$gear<-as.factor(mtcars$gear)
str(mtcars)
mtcars$cyl<-as.factor(mtcars$cyl)
glimpse(mtcars)
str(mtcars)
?mtcars
ggplot(mtcars,mapping = aes(x = hp,y = disp,fill = vs))+
geom_col()+
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "powder blue"))
ggplot(mtcars,mapping = aes(x = hp,y = disp,fill = vs))+
geom_col()+
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "blue"))
ggplot(mtcars,mapping = aes(x = hp,y = disp,fill = vs))+
geom_boxplot()+
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "blue"))
ggplot(mtcars,mapping = aes(x = gear,fill = vs))+
geom_histogram(stat = "count")+
ggtitle("Check gear for the two engines")+
xlab("gear")+
ylab("Frequency")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = wt,y = qsec,fill = vs))+
geom_point()+
facet_wrap(~am)
ggtitle("Check for different features")+
xlab("Weight (1000 lbs)")+
ylab("1/4 mile time")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = wt,y = qsec,color = vs))+
geom_point()+
facet_wrap(~am)
ggtitle("Check for different features")+
xlab("Weight (1000 lbs)")+
ylab("1/4 mile time")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = wt,y = qsec,color = vs))+
geom_point()+
facet_wrap(~am)
ggtitle("Check for different features")+
xlab("Weight")+
ylab("mile time")+
theme(panel.background = element_rect(fill = "white"))
#lets check what dimensions we have for mtcar dataset
ggplot(mtcars,mapping = aes(x = wt,y = qsec,color = vs))+
geom_point()+
facet_wrap(~am)
ggtitle("Check for different features")+
xlab("Weighted")+
ylab("miles")+
theme(panel.background = element_rect(fill = "white"))
#lets check what dimensions we have for mtcar dataset
#lets check what dimensions we have for mtcar dataset
dim(mtcars)
ggplot(mtcars,mapping = aes(x = wt,y = qsec,color = vs))+
geom_point()+
facet_wrap(~am)+
ggtitle("Check for different features")+
xlab("Weighted")+
ylab("miles")+
theme(panel.background = element_rect(fill = "white"))
#lets check what dimensions we have for mtcar dataset
dim(mtcars)
#not a lot of data
#check for cylinders
ggplot(mtcars,mapping = aes(x = cyl,fill = vs))+
geom_histogram(stat = "count")+
geom_density()+
facet_wrap(~am)+
ggtitle("Number of cylinders where the two engines exist")+
xlab("frequency")+
ylab("Numbers  of cylinders")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = cyl,fill = vs))+
geom_histogram(stat = "count")+
facet_wrap(~am)+
ggtitle("Number of cylinders where the two engines exist")+
xlab("Numbers  of cylinders")+
ylab("frequency")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = cyl,fill = vs))+
geom_histogram(stat = "count",binwidth = 0.5)+
facet_wrap(~am)+
ggtitle("Number of cylinders where the two engines exist")+
xlab("Numbers  of cylinders")+
ylab("frequency")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = cyl,fill = vs))+
geom_histogram(stat = "count",binwidth = 0.5)+
ggtitle("Number of cylinders where the two engines exist")+
xlab("Numbers  of cylinders")+
ylab("frequency")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = cyl,fill = vs))+
geom_histogram(stat = "count",binwidth = 0.5)+
geom_density()+
ggtitle("Number of cylinders where the two engines exist")+
xlab("Numbers  of cylinders")+
ylab("frequency")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = drat,fill = vs))+
geom_histogram(stat = "count",binwidth = 0.5)+
ggtitle("Number of cylinders where the two engines exist")+
xlab("Numbers  of cylinders")+
ylab("frequency")+
theme(panel.background = element_rect(fill = "white"))
train<-ranger(vs~.,data = mtcars,num.trees = 500,respect.unordered.factors = "order")
train<-ranger(vs~.,data = mtcars,num.trees = 500,respect.unordered.factors = "order")
train
#woow my out of bug error is only 6% meaning the accuracy 94%
ft<-predict(train,data = mtcars)
mtcars
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ranger)
str(mtcars)
glimpse(mtcars)
mtcars$vs<-as.factor(mtcars$vs)
mtcars$carb<-as.factor(mtcars$carb)
str(mtcars)
mtcars$am<-as.factor(mtcars$am)
mtcars$gear<-as.factor(mtcars$gear)
str(mtcars)
mtcars$cyl<-as.factor(mtcars$cyl)
glimpse(mtcars)
str(mtcars)
ggplot(mtcars,mapping = aes(x = hp,y = disp,fill = vs))+
geom_boxplot()+
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "blue"))
ggplot(mtcars,mapping = aes(x = gear,fill = vs))+
geom_histogram(stat = "count")+
ggtitle("Check gear for the two engines")+
xlab("gear")+
ylab("Frequency")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = wt,y = qsec,color = vs))+
geom_point()+
facet_wrap(~am)+
ggtitle("Check for different features")+
xlab("Weighted")+
ylab("miles")+
theme(panel.background = element_rect(fill = "white"))
#lets check what dimensions we have for mtcar dataset
dim(mtcars)
#not a lot of data
#check for cylinders
ggplot(mtcars,mapping = aes(x = cyl,fill = vs))+
geom_histogram(stat = "count",binwidth = 0.5)+
facet_wrap(~am)+
ggtitle("Number of cylinders where the two engines exist")+
xlab("Numbers  of cylinders")+
ylab("frequency")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = cyl,fill = vs))+
geom_histogram(stat = "count",binwidth = 0.5)+
ggtitle("Number of cylinders where the two engines exist")+
xlab("Numbers  of cylinders")+
ylab("frequency")+
theme(panel.background = element_rect(fill = "white"))
train<-ranger(vs~.,data = mtcars,num.trees = 500,respect.unordered.factors = "order")
train
#woow my out of bug error is only 6% meaning the accuracy 94%
ft<-predict(train,data = mtcars)
table(mtcars$vs,predictions(ft))
table(ft)
ft<-predict(train,data = mtcars)
table(mtcars$vs,predictions(ft))
table(ft$predictions)
mtcars
ggplot(mtcars,mapping = aes(x = hp,y = disp,fill = vs))+
geom_point(method = "lm")+
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "blue"))
ggplot(mtcars,mapping = aes(x = hp,y = disp,colour = vs))+
geom_point(method = "lm")+
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "blue"))
ggplot(mtcars,mapping = aes(x = hp,y = disp,colour = vs))+
geom_point()+
geom_smooth(method = "lm")
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "blue"))
ggplot(mtcars,mapping = aes(x = hp,y = disp))+
geom_point()+
geom_smooth(method = "lm",se = FALSE)
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "blue"))
train<-ranger(vs~.,data = mtcars,num.trees = 500,respect.unordered.factors = "order")
train
#woow my out of bug error is only 6% meaning the accuracy 94%
ft<-predict(train,data = mtcars)
table(mtcars$vs,predictions(ft))
train2<-ranger(mpg ~.,data = mtcars,num.trees = 500,respect.unordered.factors = "order")
train2
ft2<-predict(train2,data = mtcars)
table(mtcars$mpg,predictions(ft))
linmodel<-lm(mpg~.,data = mtcars)
linmodel
linmodel<-lm(mpg~.,data = mtcars)
summary(linmodel)
str(mtcars)
linmodel<-lm(mpg~disp+hp+drat+wt+qsec,data = mtcars)
summary(linmodel)
?data.frame
linmodel<-lm(mpg~disp+hp+drat+wt+qsec,data = mtcars)
summary(linmodel)
newdata<-as.data.frame(disp  = 160,qsec = 16.4,drat = 3.5,wt = 3.09,hp = 110)
ewdata<-as.data.frame(mtcars,disp  = 160,qsec = 16.4,drat = 3.5,wt = 3.09,hp = 110)
linmodel<-lm(mpg~disp+hp+drat+wt+qsec,data = mtcars)
summary(linmodel)
newdata<-as.data.frame(mtcars,disp  = 160,qsec = 16.4,drat = 3.5,wt = 3.09,hp = 110)
nowPredict<-predict(linmodel,newdata)
linmodel<-lm(mpg~disp+hp+drat+wt+qsec,data = mtcars)
summary(linmodel)
newdata<-as.data.frame(mtcars,disp  = 160,qsec = 16.4,drat = 3.5,wt = 3.09,hp = 110)
nowPredict<-predict(linmodel,newdata)
table(nowPredict)
linmodel<-lm(mpg~disp+hp+drat+wt+qsec,data = mtcars)
summary(linmodel)
newdata1<-as.data.frame(mtcars,disp  = 160,qsec = 16.4,drat = 3.5,wt = 3.09,hp = 110)
nowPredict<-predict(linmodel,newdata1)
table(nowPredict)
dim(mtcars)
train<-ranger(vs~.,data = mtcars[1:16,],num.trees = 500,respect.unordered.factors = "order")
train
#woow my out of bug error is only 6% meaning the accuracy 94%
ft<-predict(train,data = mtcars[17:32])
table(mtcars$vs,predictions(ft))
ft<-predict(train,data = mtcars[17:32,])
table(mtcars$vs[17:32,],predictions(ft))
t
#to reduce any overfitting start with random forest ranger package.
test <- mtcars[17:32,]
train<-ranger(vs~.,data = mtcars[1:16,],num.trees = 500,respect.unordered.factors = "order")
train
#woow my out of bug error is only 6% meaning the accuracy 94%
ft<-predict(train,data = test)
table(test$vs,predictions(ft))
#to reduce any overfitting start with random forest ranger package.
test <- mtcars[17:32,]
view(test)
test <- mtcars[17:32,]
view(test)
set.seed(1234)
train<-ranger(vs~.,data = mtcars[1:16,],num.trees = 500,respect.unordered.factors = "order")
train
#w
#to reduce any overfitting start with random forest ranger package.
test <- mtcars[17:32,]
trainDataset<-mtcars[1:16,]
view(test)
view(trainDataset)
set.seed(1234)
train2<-ranger(mpg ~.,data = trainDataset,num.trees = 500,respect.unordered.factors = "order")
train2
ft2<-predict(train2,data = test)
table(test$mpg,predictions(ft))
linmodel<-lm(mpg~.,data = trainDataset)
summary(linmodel)
nowPredict<-predict(linmodel,test)
table(nowPredict)
mtcars
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ranger)
str(mtcars)
glimpse(mtcars)
mtcars$vs<-as.factor(mtcars$vs)
mtcars$carb<-as.factor(mtcars$carb)
str(mtcars)
mtcars$am<-as.factor(mtcars$am)
mtcars$gear<-as.factor(mtcars$gear)
str(mtcars)
mtcars$cyl<-as.factor(mtcars$cyl)
glimpse(mtcars)
str(mtcars)
ggplot(mtcars,mapping = aes(x = hp,y = disp,fill = vs))+
geom_boxplot()+
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "blue"))
ggplot(mtcars,mapping = aes(x = hp,y = disp))+
geom_point()+
geom_smooth(method = "lm",se = FALSE)
ggtitle("Displacement vs gross horsepower for the two different engines")+
xlab("Gross horsepower")+
ylab("Displacement (cu.in.)")+
theme(panel.background = element_rect(fill = "white",colour = "blue"))
ggplot(mtcars,mapping = aes(x = gear,fill = vs))+
geom_histogram(stat = "count")+
ggtitle("Check gear for the two engines")+
xlab("gear")+
ylab("Frequency")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = wt,y = qsec,color = vs))+
geom_point()+
facet_wrap(~am)+
ggtitle("Check for different features")+
xlab("Weighted")+
ylab("miles")+
theme(panel.background = element_rect(fill = "white"))
#lets check what dimensions we have for mtcar dataset
dim(mtcars)
#not a lot of data
#check for cylinders
ggplot(mtcars,mapping = aes(x = cyl,fill = vs))+
geom_histogram(stat = "count",binwidth = 0.5)+
facet_wrap(~am)+
ggtitle("Number of cylinders where the two engines exist")+
xlab("Numbers  of cylinders")+
ylab("frequency")+
theme(panel.background = element_rect(fill = "white"))
ggplot(mtcars,mapping = aes(x = cyl,fill = vs))+
geom_histogram(stat = "count",binwidth = 0.5)+
ggtitle("Number of cylinders where the two engines exist")+
xlab("Numbers  of cylinders")+
ylab("frequency")+
theme(panel.background = element_rect(fill = "white"))
#to reduce any overfitting start with random forest ranger package.
test <- mtcars[17:32,]
trainDataset<-mtcars[1:16,]
view(test)
view(trainDataset)
set.seed(1234)
train<-ranger(vs~.,data = mtcars[1:16,],num.trees = 500,respect.unordered.factors = "order")
train
#woow my out of bug error is only 6% meaning the accuracy 94%
ft<-predict(train,data = test)
table(test$vs,predictions(ft))
set.seed(1234)
train2<-ranger(mpg ~.,data = trainDataset,num.trees = 500,respect.unordered.factors = "order")
train2
ft2<-predict(train2,data = test)
table(test$mpg,predictions(ft))
str(mtcars)
